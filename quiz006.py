from itertools import batched
nums = [1, 2, 3, 4, 5, 6, 7]
chunks = list(batched(nums, 3))
print(chunks)  # [(1, 2, 3), (4, 5, 6), (7,)]

# ðŸ”Ž WHAT IT DOES
# âœ… Splits data into fixed-size chunks
# âœ… Handles leftovers gracefully in the last batch
# âœ… Works with any iterable
# ðŸ›  USAGE
# â€” Processing data in batches
# â€” Splitting records for APIs or DB inserts
# â€” Chunking items for parallel tasks
# ðŸ’¡ WHY IT MATTERS
# âŸ¶ Cleaner than writing custom slicing loops
# âŸ¶ Memory-efficient and Pythonic
# âŸ¶ Perfect for big data, ETL, and automation scripts
# ðŸ“š TRIVIA
# batched() was introduced in Python 3.12, making chunking a built-in featureâ€”previously developers used loops or more-itertools.